#####################################################################
# General Listener configuration
#####################################################################
# role: Sets the process as a talker or listener. Valid values are
# talker or listener
role = listener
spin_wait = 1

# initial_state: Specify whether the talker or listener should be
# running or stopped on startup.  Valid values are running or stopped.
# If not specified, the default will depend on how the talker or
# listener is launched.
#initial_state = running

# stream_addr: Used on the listener and should be set to the
# mac address of the talker.
#stream_addr = 20:CD:39:DC:06:AC

# stream_uid: The unique stream ID. The talker and listener must
# both have this set the same.
stream_uid = 0

# dest_addr: see description in talker.ini
#dest_addr = 91:E0:F0:00:FE:80

# max_interval_frames: The maximum number of packets that will be sent during
# an observation interval. This is only used on the talker.
#max_interval_frames = 1

# sr_class: A talker only setting. Values are either A or B. If not set an internal
# default is used.
sr_class = A

# sr_rank: A talker only setting. If not set an internal default is used.
#sr_rank = 1

# max_transit_usec: Allows manually specifying a maximum transit time.
# On the talker this value is added to the PTP walltime to create the AVTP Timestamp.
# On the listener this value is used to validate an expected valid timestamp range.
# Note: For the listener the map_nv_item_count value must be set large enough to
# allow buffering at least as many AVTP packets that can be transmitted  during this
# max transit time.
max_transit_usec = 100000

# internal_latency: Allows mannually specifying an internal latency time. This is used
# only on the talker.
#internal_latency = 0

# max_stale: The number of microseconds beyond the presentation time that media queue items will be purged
# because they are too old (past the presentation time). This is only used on listener end stations.
# Note: needing to purge old media queue items is often a sign of some other problem. For example: a delay at
# stream startup before incoming packets are ready to be processed by the media sink. If this deficit
# in processing or purging the old (stale) packets is not handled, syncing multiple listeners will be problematic.
#max_stale = 1000

# raw_tx_buffers: The number of raw socket transmit buffers. Typically 4 - 8 are good values.
# This is only used by the talker. If not set internal defaults are used.
#raw_tx_buffers = 1

# raw_rx_buffers: The number of raw socket receive buffers. Typically 50 - 100 are good values.
# This is only used by the listener. If not set internal defaults are used.
#raw_rx_buffers = 100

# report_seconds: How often to output stats. Defaults to 10 seconds. 0 turns off the stats.
# report_seconds = 0

# Ethernet Interface Name. Only needed on some platforms when stack is built with no endpoint functionality
ifname = ens2

# Bit mask used for CPU pinning. Defaults to all cpus can be used (0xffffffff).
thread_affinity = 12

# Enable real time scheduling with this priority. Defaults to not use RT sched (0).
thread_rt_priority = 80

#####################################################################
# Mapping module configuration
#####################################################################
# map_lib: The name of the library file (commonly a .so file) that
#  implements the Initialize function.  Comment out the map_lib name
#  and link in the .c file to the openavb_tl executable to embed the mapper
#  directly into the executable unit. There is no need to change anything
#  else. The Initialize function will still be dynamically linked in.
map_lib = ./libopenavb_map_uncmp_audio.so

# map_fn: The name of the initialize function in the mapper.
map_fn = openavbMapUncmpAudioInitialize

# map_nv_item_count: The number of media queue elements to hold.
map_nv_item_count = 32

# map_nv_tx_rate: Transmit rate.
# This must be set for the uncompressed audio mapping module.
map_nv_tx_rate = 8000

# map_nv_packing_factor: Multiple of how many packets of audio frames to place in a media queue item.
# Note: Typically when decreasing the map_nv_tx_rate the packing factor will also be decreased since
# the number of frames per packet will be increasing.
map_nv_packing_factor = 8

#####################################################################
# Interface module configuration
#####################################################################
# intf_lib: The name of the library file (commonly a .so file) that
#  implements the Initialize function.  Comment out the intf_lib name
#  and link in the .c file to the openavb_tl executable to embed the interface
#  directly into the executable unit. There is no need to change anything
#  else. The Initialize function will still be dynamically linked in.
intf_lib = ./libopenavb_intf_aes67.so

# intf_fn: The name of the initialize function in the interface.
intf_fn = openavbIntfAES67Initialize

intf_nv_audio_rate = 48000
# bit depth can also be set to the special value am824 for AES3 transparency
intf_nv_audio_bit_depth = 24
intf_nv_audio_channels = 4

intf_nv_aes67_ifname = ens2
intf_nv_aes67_session_name = Avid S3
#intf_nv_aes67_ptime_usec = 1000

# presentation time offset in microseconds, this is the difference between
# the PTP time and the presentation time
#intf_nv_aes67_pto_usec = -1800000
intf_nv_aes67_pto_usec = 750

intf_nv_aes67_multicast_address = 239.69.83.42

# whether the use hardware timestamping on outgoing RTP packets. This is the default,
# but must be disabled if the AES67 interface does not share a PHC with the AVB one.
intf_nv_aes67_hwtstamp = 1

# the IGB rawsock will directly use queue 0 for Class A and 1 for Class B traffic.
# if testing with no Class B traffic we can steer RTP traffic to queue 1 with the
# following command and configuration. Somewhat confusing owing to the multiple levels
# of indirection, but SO priority 2 maps to TC 1 (by the index in map directive), and
# that in turn maps to queue 1 via 1@1.
#
# tc qdisc add dev ens2 parent root handle 1000 mqprio \
#        num_tc 3 \
#        map 2 2 1 0 2 2 2 2 2 2 2 2 2 2 2 2 \
#        queues 1@0 1@1 2@2 \
#        hw 0
intf_nv_aes67_socket_priority = 2

# sample command line arguments for running openavb_host or openavb_harness
# openavb_host -I ens2 aes67_talker.ini,ifname=igb:ens2 aes67_listener.ini,ifname=igb:ens2
